#!/bin/bash

# Default values
default_threads=8
default_sys_threads=24

Usage() {
cat << EOF
Usage: $(basename $0) [-j <threads>] ...

       <threads>  Minimum number of threads to use even if there are less CPUs
                  available. Default is '$default_threads'.
EOF
}

case "$1" in
  -j[0-9]*)
    default_threads=$(echo $1 | sed -e 's|-j\([0-9]*\)|\1|')
    shift
    ;;
  -j)
    default_threads=$2
    shift 2
    ;;
  -h|-H)
    Usage
    exit 0
    ;;
esac

logfile=$(basename $0).log

threads=$(freecpus $default_threads)

# Get load manually if `freecpus` not available
if [ -z "$threads" ]; then
  if [ -n "$(nproc)" ]; then
    sys_threads=$(nproc)
  else
    sys_threads=$(lscpu -p | grep -v "^#" |wc -l )
    if [ -z "$sys_threads" ]; then
      sys_threads=$default_sys_threads
    fi
  fi

  load_float=$(uptime | sed -e 's|.*load average: \([0-9]\{1,\}\.[0-9]\{2\}\).*|\1|')
  if [ -n "$load_float" ]; then
    load_int=$(echo "($load_float+0.5)/1" |bc)
    threads=$(expr $sys_threads - $load_int)
    if [ $threads -lt $default_threads ]; then
      threads=$default_threads
    fi
  else
    echo "WARNING: Can't get load average. Using $default_threads."
    threads=$default_threads
  fi
fi

set -x
time -p make -j$threads "$@" 2>&1 | tee $logfile
