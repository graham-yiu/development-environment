#!/bin/bash

build_dir="../build/llvm-4.0.0/build"
clang_dir_name="clang-4.0.0"
lld_dir_name="lld-4.0.0"


# Filetypes to recognize
file_suffix="\
c \
cpp \
h \
hpp \
inc \
"

# Directories to scan for interesting files 
first_level_dirs="\
lib \
include \
unittests \
tools/$clang_dir_name/lib \
tools/$clang_dir_name/include \
tools/$clang_dir_name/unittests \
$build_dir/lib/IR \
$build_dir/lib/LibDriver \
$build_dir/lib/Target \
$build_dir/tools/cce-ld \
$build_dir/tools/$clang_dir_name/include/clang \
$build_dir/tools/$clang_dir_name/lib/Basic \
$build_dir/tools/$lld_dir_name \
$build_dir/tools/llvm-config \
$build_dir/unittests/Option \
"

git_repo_root_dirs=$(find $PWD -name .git | sed -e 's|\(.*\)\/\.git|\1|')

echo "Using ctags from $(which ctags)"
echo "Using cscope from $(which cscope)"
# If directory contains at least type in $file_suffix, print the directory to stdout
find_interesting_subdirs() {
  typeset dir=$1
  typeset idirs=
  for subdir in $(find $dir/ -type d); do
    found_file=0
    for suffix in $file_suffix; do
      if [ -n "$(ls $subdir/*.$suffix 2>/dev/null)" ]; then
        found_file=1
        break
      fi
    done
    if [ -d $subdir/.git ]; then 
      found_file=1
    fi
    if [ $found_file -eq 0 ]; then 
      continue
    fi
    echo $subdir
  done
}

rm -f tags
rm -f cscope*.out

all_dirs=$git_repo_root_dirs
num_dirs=0
printf "Tagging %s ... \n" $first_level_dirs
ctags --langmap=c++:+.inc --exclude=cscope.* -Ra ${PWD}/${first_level_dirs}
echo "done!"
for fldirs in $first_level_dirs; do
  if [ ! -e $fldirs ]; then
    echo "WARNING: Cannot find '$fldirs'. Skipping ... "
    continue
  fi
  idirs=$(find_interesting_subdirs $PWD/$fldirs)
  for dir in $idirs; do
    rm -f $dir/cscope*.out
    all_dirs="$all_dirs $dir"
    num_dirs=$(expr $num_dirs + 1)
  done
done
printf "Cscoping %i dirs ... " $num_dirs
cscope -bRq
for dir in $all_dirs; do
  if [ "$dir" = $PWD ]; then
    continue
  fi
  ln -sf $PWD/cscope*.out $dir/
done
echo "done!"
